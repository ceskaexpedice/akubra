plugins {
    id 'java-library' // Applies the Java plugin
	id 'maven-publish'
}

publishing {

  publications {
        myLibrary(MavenPublication) {
            from components.java
        }
    }

  repositories {
    maven {
      name = "GitHubPackages"
      url = "https://maven.pkg.github.com/ceskaexpedice/akubra"
      credentials {
        username = System.getenv("GITHUB_ACTOR")
        password = System.getenv("GITHUB_TOKEN")
      }
    }
  }
}

repositories {
    mavenLocal()
    mavenCentral()
    maven {
        url "https://maven.java.net/content/repositories/snapshots/"
    }
    maven {
        url "https://repository.springsource.com/maven/bundles/external"
    }
    maven {
        url "https://repository.jboss.org/nexus/content/repositories/thirdparty-releases"
    }
    maven {
        url "https://download.osgeo.org/webdav/geotools/"
    }
    maven {
        url 'https://github.com/psiegman/mvn-repo/raw/master/releases'
    }
    maven {
        url "https://jbig2-imageio.googlecode.com/svn/maven-repository"
    }
    maven {
        url "https://jbig2-imageio.googlecode.com/svn/maven-repository"
    }
    maven {
        url "https://jitpack.io"
    }
}

dependencies {
    //akubra storage
    implementation 'org.akubraproject:akubra-core:0.4.0'
    implementation('org.akubraproject:akubra-fs:0.4.0') {
        exclude group: 'com.google.guava', module: 'guava-collections'
        exclude group: 'com.google.guava', module: 'guava-annotations'
        exclude group: 'com.google.guava', module: 'guava-primitives'
        exclude group: 'com.google.guava', module: 'guava-base'
    }
    implementation('org.akubraproject:akubra-map:0.4.0') {
        exclude group: 'com.google.guava', module: 'guava-collections'
        exclude group: 'com.google.guava', module: 'guava-annotations'
        exclude group: 'com.google.guava', module: 'guava-primitives'
        exclude group: 'com.google.guava', module: 'guava-base'
    }
    implementation 'org.ehcache:ehcache:3.3.0'

    //JAXB
    implementation "javax.xml.bind:jaxb-api:2.3.1"
    implementation "com.sun.xml.bind:jaxb-impl:2.3.6"
    implementation "javax.activation:activation:1.1"
    implementation "javax.annotation:javax.annotation-api:1.3.2"

    //dom4j
    implementation 'jaxen:jaxen:1.2.0'
    implementation 'org.dom4j:dom4j:2.1.1'

    implementation 'com.hazelcast:hazelcast-all:3.11.2'
    implementation "commons-configuration:commons-configuration:1.10"
    implementation 'com.google.guava:guava:31.0.1-jre'
    implementation 'javax.servlet:servlet-api:2.5'
    implementation 'org.apache.solr:solr-solrj:8.8.1'
    implementation "org.apache.commons:commons-lang3:3.5"
    implementation "org.antlr:stringtemplate:3.2.1"
    implementation'net.jcip:jcip-annotations:1.0'
    implementation "commons-dbcp:commons-dbcp:1.4"
    implementation 'fast-md5:fast-md5:2.5'

    // test
    testImplementation 'org.junit.jupiter:junit-jupiter:5.10.0' // Replace with your test dependency
    testImplementation 'org.mockito:mockito-core:5.14.2'
    testImplementation 'org.mockito:mockito-inline:5.2.0'

}

test {
    useJUnitPlatform() // Configures the test task to use JUnit 5
    forkEvery = 1
}

build.doLast {
    println "Build outputs located in ${project.buildDir}"
}